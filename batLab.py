#!/usr/bin/env python3
# -*- coding: utf-8 -*-


#librerias
# ---  *****  ---
import os
from sys import exit
from time import sleep
# ---  *****  ---


#funciones estéticas
# ---  *****  ---
class colores():
    red = "\033[0;31m"
    blue = "\033[0;34m"
    green = "\033[0;32m"
    white = "\u001b[37m"
    yellow = "\u001b[33m"
    cyan = "\033[0;36m"
    reset = "\u001b[0m"
    error = red + '[-]'
    sucesfull = green + '[*]'

def clear():
    if os.name == "posix":
        os.system('clear')
    elif os.name == "ce" or os.name == "nt" or os.name == "dos":
        os.system('cls')

def banner():
    c = colores()
    print(c.cyan + ("\t\t\t  @@@@@@@   @@@@@@  @@@@@@@      @@@       @@@@@@  @@@@@@@ \n"
                    "\t\t\t  @@!  @@@ @@!  @@@   @@!        @@!      @@!  @@@ @@!  @@@ \n"
                    "\t\t\t  @!@!@!@  @!@!@!@!   @!!        @!!      @!@!@!@! @!@!@!@ \n"
                    "\t\t\t  !!:  !!! !!:  !!!   !!:        !!:      !!:  !!! !!:  !!! \n"
                    "\t\t\t  :: : ::   :   : :    :         : ::.: :  :   : : :: : :: \n"))
# ---  *****  ---


def menuPrincipal():
    clear()
    print(c.green + "1_" + c.white + "Mostrar mensaje en consola.\n" +
          c.green + "2_" + c.white + "Borrar archivos.\n" +
          c.green + "3_" + c.white + "Copiar achivos\n" +
          c.green + "4_" + c.white + "Añadir exit\n" +
          c.green + "5_" + c.white + "Crear carpetas.\n" +
          c.green + "6_" + c.white + "Abrir otro archivo batch.\n" +
          c.green + "7_" + c.white + "Abrir otro archivo ejecutable.\n" +
          c.green + "8_" + c.white + "Abrir página web.\n" +
          c.green + "9_" + c.white + "Apagar ordenador\n" +
          c.green + "10_" + c.white + "Reiniciar ordenador\n" +
          c.green + "11_" + c.white + "Formatear ordenador\n" +
          c.green + "12_" + c.white + "Pausa temporal\n" +
          c.green + "13_" + c.white + "Pausa\n" +
          c.green + "14_" + c.white + "Crear bucle infinito\n" +
          c.green + "15_" + c.white + "Cerrar bucle infinito\n" +
          c.green + "16_" + c.white + "Abrir cmd\n" +
          c.green + "17_" + c.white + "Hacer ping a una ip\n" +
          c.green + "18_" + c.white + "Listar contenido de un directorio\n" +
          c.green + "19_" + c.white + "Declarar variable\n" +
          c.green + "20_" + c.white + "Insertar comprobacion if\n" +
          c.green + "21_" + c.white + "Cambiar colores de la terminal\n" +
          c.green + "22_" + c.white + "Abrir copilador de batch(solo windows)\n" +
          c.green + "23_" + c.white + "Añadir titulo a la consola del bat\n" +
          c.green + "24_" + c.white + "Cambiar permisos de archivos\n" +
          c.green + "25_" + c.white + "Limpiar consola\n" +
          c.green + "26_" + c.white + "Cambiar tamaño de consola\n" +
          c.green + "27_" + c.white + "Ver codigo actual\n" +
          c.green + "28_" + c.white + "Usar plantilla\n" +
          c.green + "29_" + c.white + "Salir\n" + c.cyan)

class init():
    while(True):
        clear()
        banner()
        print(colores.blue + "Escriba el nombre, sin acentos ni simbolos ni espacios (ejemplo1.bat)" + colores.cyan)
        name = str(input("--> "))
        if(name.find('@') != -1):
            print(colores.error + "Ruta no válida")
            sleep(1)
        if(name.find(' ') != -1):
            print(colores.error + "Ruta no válida")
            sleep(1)
        if(name.find('á') != -1):
            print(colores.error + "Ruta no válida")
            sleep(1)
        if(name.find('é') != -1):
            print(colores.error + "Ruta no válida")
            sleep(1)
        if(name.find('í') != -1):
            print(colores.error + "Ruta no válida")
            sleep(1)
        if(name.find('ó') != -1):
            print(colores.error + "Ruta no válida")
            sleep(1)
        if(name.find('ú') != -1):
            print(colores.error + "Ruta no válida")
            sleep(1)
        if(name.find(' ') == -1 and name.find('@') == -1 and name.find('á') == -1 and name.find('é') == -1 and name.find('í') == -1 and name.find('ó') == -1 and  name.find('ú') == -1):
            break
    try:
        os.system("echo @echo off >> " + name)
        clear()
        print(colores.sucesfull + "El archivo se ha creado correctamente en la carpeta de la herramienta" + colores.cyan)
        sleep(2)
    except:
        print(colores.error + "Ha ocurrido un error creando el archivo" + colores.reset)
        sleep(1)
        exit()

class menus():

    #menu para mostrar mensajes
    def menu1():
        clear()
        banner()
        print(c.blue + "Escriba el mensaje..." + c.cyan)
        msg = str(input('--> '))
        try:
            os.system("echo echo " + msg + " >> " + init.name)
            print(c.sucesfull + "Se a añadido la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para borrar archivos
    def menu2():
        clear()
        banner()
        print(c.blue + "Escriba la ruta del archivo..." + c.cyan)
        delRute = str(input('--> '))
        try:
            if os.name == "posix":
                pass
            if os.name == "ce" or os.name == "nt" or os.name == "dos":
                os.system("echo del / f / q / S " + delRute + " >> " + init.name)
            print(c.sucesfull + "Se a añadido la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para copiar archivos
    def menu3():
        clear()
        banner()
        print(c.blue + "Ingrese la ruta del archivo a copiar..." + c.cyan)
        file1 = str(input('--> '))
        clear()
        banner()
        print(c.blue + "Ingrese la ruta de destino..." + c.cyan)
        file2 = str(input('--> '))
        try:
            os.system("echo copy " + file1 + " " + file2 + " >> " + init.name)
            print(c.sucesfull + "Se ha agregado la acción")
            sleep(1)
        except:
            print(error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para colocar exit
    def menu4():
        clear()
        banner()
        print(c.blue + "Espere porfavor..." + c.cyan)
        try:
            os.system("echo exit >> " + init.name)
            print(c.sucesfull + "Se ha añadido la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para crear carpetas
    def menu5():
        clear()
        banner()
        print(c.blue + "Ingrese ruta de la nueva carpeta..." + c.cyan)
        md = str(input('--> '))
        try:
            os.system("echo md " + md + " >> " + init.name)
            print(c.sucesfull + "Se ha añadido la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para llamar otros batch
    def menu6():
        while(True):
            while(True):
                clear()
                banner()
                print(c.blue + "Seleccione una opcion" + c.green)
                print("1_" + c.white + "Llamar mostrando su consola" + c.green)
                print("2_" + c.white + "Llamar sin mostrar su consola" + c.cyan)
                try:
                    so = int(input('--> '))
                    break
                except:
                    print(c.error + "Opción inválida")
                    sleep(1)
            if(so == 1):
                clear()
                banner()
                print(c.blue + "Ingrese la ruta del archivo batch a ejecutar..." + c.cyan)
                bt = str(input('--> '))
                try:
                    os.system("echo call " + bt + " >> " + init.name)
                    print(c.sucesfull + "Se ha añadido la acción")
                    sleep(1)
                    break
                except:
                    print(c.error + "Ha ocurrido un error" + c.reset)
                    sleep(1)
                    exit()

            if(so == 2):
                clear()
                banner()
                print(c.blue + "Ingrese la ruta del archivo batch a ejecutar..." + c.cyan)
                bt = str(input('--> '))
                try:
                    os.system("echo call " + bt + " /B >> " + init.name)
                    print(c.sucesfull + "Se ha añadido la acción")
                    sleep(1)
                    break
                except:
                    print(c.error + "Ha ocurrido un error" + c.reset)
                    sleep(1)
                    exit()

            if(so != 1 and so != 2):
                print(c.error + "Opción inválida")
                sleep(1)

    #menu para llamar a ejecutables
    def menu7():
        clear()
        banner()
        print(c.blue + "Ingrese la ruta del ejecutable..." + c.cyan)
        exe = str(input('--> '))
        try:
            os.system("echo start " + exe + " >> " + init.name)
            print(c.sucesfull + "Se ha agregado la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit

    #menu para abrir paginas web
    def menu8():
        clear()
        banner()
        print(c.blue + "Ingrese la url de la pagina (https://github.com)...")
        url = str(input('--> '))
        try:
            os.system("echo start \"\" " + url + " >> " + init.name)
            print(c.sucesfull + "Se ha agregado  la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para apagar el ordenador
    def menu9():
        clear()
        banner()
        print(c.blue + "Ingrese tiempo para el apagado en segundos..." + c.cyan)
        s = str(input('--> '))
        try:
            os.system("echo ping -n " + s + " localhost >> " + init.name)
            os.system("echo shutdown -s -f -t 0 >> " + init.name)
            print(c.sucesfull + "Se ha agregado la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para reiniciar ordenador
    def menu10():
        clear()
        banner()
        print(c.blue + "Ingrese tiempo para reiniciar en segundos..." + c.cyan)
        s = str(input('--> '))
        try:
            os.system("echo ping -n " + s + " localhost >> " + init.name)
            os.system("echo shutdown -r -f -t 0 >> " + init.name)
            print(c.sucesfull + "Se ha agregado la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para formatear
    def menu11():
        clear()
        banner()
        print(c.blue + "Ingrese tiempo para formateo en segundos..." + c.cyan)
        s = str(input('--> '))
        try:
            os.system("echo ping -n " + s + " localhost >> " + init.name)
            os.system("echo erase C:\Windows \\q >> " + init.name)
            print(c.sucesfull + "Se ha agregado la acción" + c.cyan)
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para pausas temporales
    def menu12():
        clear()
        banner()
        print(c.blue + "Tiempo de pausa en segundos..." + c.cyan)
        pS = str(input('--> '))
        try:
            os.system("echo ping -n " + pS + " localhost >> " + init.name)
            print(c.sucesfull + "Se ha agregado la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()


    #menu para pausas
    def menu13():
        clear()
        banner()
        print(c.blue + "Espere porfavor..." + c.cyan)
        try:
            os.system("echo pause >> " + init.name)
            print(c.sucesfull + "Se ha añadido la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para crear bucles while
    def menu14():
        clear()
        banner()
        print(c.blue + "Ingrese el nombre del bucle sin signos ni espacios..." + c.cyan)
        bucle = str(input('--> '))
        try:
            os.system("echo :" + bucle + " >> " + init.name)
            print(c.sucesfull + "Se ha agregado la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para cerrar bucles infinitos
    def menu15():
        clear()
        banner()
        print(c.blue + "Ingrese el nombre del bucle sin signos ni espacios..." + c.cyan)
        bucleC = str(input('--> '))
        try:
            os.system("echo goto " + bucleC + " >> " + init.name)
            print(c.sucesfull + "Se ha agregado la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para abrir cmd
    def menu16():
        while(True):
            clear()
            banner()
            print(c.blue + "Seleccione una opción..." + c.white)
            print("1_" + c.green + "Ejecutar como subproceso\n" + c.white + "2_" + c.green + "Abrir" + c.cyan)
            try:
                cmd = int(input('--> '))
                if (cmd != 1 and cmd != 2):
                    print(c.error + "Opción inválida")
                    sleep(1)
                else:
                    break
            except:
                print(c.error + "Opcion inválida")
                sleep(1)
        if(cmd == 1):
            try:
                print(c.blue + "Espere porfavor...")
                os.system("echo start /B >> " + init.name)
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()
        elif(cmd == 2):
            try:
                print(c.blue + "Espere porfavor...")
                os.system("echo start >> " + init.name)
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()


    #menu para hacer ping a una ip
    def menu17():
        clear()
        banner()
        print(c.blue + "Introduzca la ip..." + c.cyan)
        ip = str(input('--> '))
        clear()
        banner()
        print(c.blue + "Introduzca el tamaño de los paquetes..." + c.cyan)
        size = str(input('--> '))
        clear()
        banner()
        print(c.blue + "Introduzca la cantidad de paquetes, si desea un número ilimitado de veces pulse enter sin ingresar ningun número..." + c.cyan)
        cant = str(input('--> '))
        try:
            if(cant == ''):
                os.system("echo ping " + ip + " -t " + " -l " + size + " >> " + init.name)
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
            else:
                os.system("echo ping " + ip + " -n " + cant + " -l " + size + " >> " + init.name)
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
        except:        
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para listar contenido de un directorio
    def menu18():
        clear()
        banner()
        print(c.blue + "Ingrese la ruta del directorio..." + c.cyan)
        rutaD = str(input('--> '))
        try:
            os.system("echo dir " + rutaD + " >> " + init.name)
            print(c.sucesfull + "Se ha agregado la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para declarar variables
    def menu19():
        clear()
        banner()
        print(c.blue + "Ingrese el nombre de la variable..." + c.cyan)
        var1 = str(input('--> '))
        clear()
        banner()
        print(c.blue + "Ingrese el valor de la variable..." + c.cyan)
        valor = str(input('--> '))
        try:
            os.system("echo SET " + var1 + "=" + valor + " >> " + init.name)
            print(c.sucesfull + "Se ha agregado la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para insertar if
    def menu20():
        clear()
        banner()
        print(c.blue + "Ingrese la comprobacion que desea hacer..." + c.cyan)
        compr = str(input('--> '))
        clear()
        banner()
        print(c.blue + "Ingrese el código a ejecutar si la condicion es cierta..." + c.cyan)
        trueCode = str(input('--> '))
        clear()
        banner()
        print(c.blue + "Ingrese el código a ejecutar si la condicion es falsa..." + c.cyan)
        falseCode = str(input('--> '))
        try:
            os.system("echo if " + compr + " (" + trueCode + ")" + " else (" + falseCode + ") >> " + init.name)
            print(c.sucesfull + "Se ha agregado la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para cambiar colores de la terminal
    def menu21():
        while(True):
            clear()
            banner()
            print(c.blue + "Selecciona una opción" + c.green)
            print("1_" + c.white + "Rojo\n" + c.green + "2_" + c.white + "Azul\n" + c.green + "3_" + c.white + "Verde\n" + c.green + "4_" + c.white + "Amarillo\n" + c.cyan)
            try:
                g = int(input('--> '))
                if(g != 1 and g != 2 and g != 3 and g !=4):
                    print(c.error + "Opción inválida")
                    sleep(1)
                else:
                    break
            except:
                print(c.error + "Opción inválida")
                sleep(1)
        if(g == 1):
            try:
                os.system("echo color 04 >> " + init.name)
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()
        if(g == 2):
            try:
                os.system("echo color 01 >> " + init.name)
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()
        if(g == 3):
            try:
                os.system("echo color 02 >> " + init.name)
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()
        if(g == 4):
            try:
                os.system("echo color 06 >> " + init.name)
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()
    #menu para copilar batch
    def menu22():
        os.system(os.getcwd() + "\\batToExe\\batToExe.exe")
        sleep(1)

    #menu para añadir título a la consola
    def menu23():
        clear()
        banner()
        print(c.blue + "Ingrese el título" + c.cyan)
        title = str(input('--> '))
        try:
            os.system("echo title " + title + " >> " + init.name)
            print(c.sucesfull + "Se ha agregado la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para cambiar permisos de archivos
    def menu24():
        while(True):
            clear()
            banner()
            print(c.blue + "Selecciona una opción..." + c.green)
            print("1_" + c.white + "Añadir permisos\n" + c.green + "2_" + c.white + "Quitar permisos" + c.cyan)
            try:
                perm  = int(input('--> '))
                if(perm != 1 and perm != 2):
                    print(c.error + "Opción inválida")
                    sleep(1)
                else:
                    break
            except:
                print(c.error + "Opción inválida")
                sleep(1)
        if(perm == 1):
            while(True):
                clear()
                banner()
                print(c.blue + "Selecciona una opción" + c.green)
                print("1_" + c.white + "Solo lectura\n" + c.green + "2_" + c.white + "Archivo de almacenamiento\n" + c.green + "3_" + c.white + "Archivo de sistema\n" + c.green + "4_" + c.white + "Archivo oculto\n" + c.green + "5_" + c.white + "Archivo indizado de contenido\n" + c.cyan)
                try:
                    atrib = int(input('--> '))
                    if(atrib != 1 and atrib != 2 and atrib != 3 and atrib != 4 and atrib != 5):
                        print(c.error + "Opción inválida")
                        sleep(1)
                    else:
                        break
                except:
                    print(c.error + "Opción invalida")
                    sleep(1)
            clear()
            banner()
            print(c.blue + "Ingrese la ruta del archivo el cual desea modificar..." + c.cyan)
            path = str(input('--> '))
            if(atrib == 1):
                try:
                    os.system("echo attrib +r " + path + " >> " + init.name)
                    print(c.sucesfull + "Se ha agregado la acción")
                    sleep(1)
                except:
                    print(c.error + "Ha ocurrido un error" + c.reset)
                    sleep(1)
                    exit()
            if(atrib == 2):
                try:
                    os.system("echo attrib +a " + path + " >> " + init.name)
                    print(c.sucesfull + "Se ha agregado la acción")
                    sleep(1)
                except:
                    print(c.error + "Ha ocurrido un error" + c.reset)
                    sleep(1)
                    exit()
            if(atrib == 3):
                try:
                    os.system("echo attrib +s " + path + " >> " + init.name)
                    print(c.sucesfull + "Se ha agregado la acción")
                    sleep(1)
                except:
                    print(c.error + "Ha ocurrido un error" + c.reset)
                    sleep(1)
                    exit()
            if(atrib == 4):
                try:
                    os.system("echo attrib +h " + path + " >> " + init.name)
                    print(c.sucesfull + "Se ha agregado la acción")
                    sleep(1)
                except:
                    print(c.error + "Ha ocurrido un error" + c.reset)
                    sleep(1)
                    exit()
            if(atrib == 5):
                try:
                    os.system("echo attrib +i " + path + " >> " + init.name)
                    print(c.sucesfull + "Se ha agregado la acción")
                    sleep(1)
                except:
                    print(c.error + "Ha ocurrido un error" + c.reset)
                    sleep(1)
                    exit()

        if (perm == 2):
            while (True):
                clear()
                banner()
                print(c.blue + "Selecciona una opción" + c.green)
                print(
                    "1_" + c.white + "Solo lectura\n" + c.green + "2_" + c.white + "Archivo de almacenamiento\n" + c.green + "3_" + c.white + "Archivo de sistema\n" + c.green + "4_" + c.white + "Archivo oculto\n" + c.green + "5_" + c.white + "Archivo indizado de contenido\n" + c.cyan)
                try:
                    atrib = int(input('--> '))
                    if (atrib != 1 and atrib != 2 and atrib != 3 and atrib != 4 and atrib != 5):
                        print(c.error + "Opción inválida")
                        sleep(1)
                    else:
                        break
                except:
                    print(c.error + "Opción invalida")
                    sleep(1)
            clear()
            banner()
            print(c.blue + "Ingrese la ruta del archivo el cual desea modificar..." + c.cyan)
            path = str(input('--> '))
            if (atrib == 1):
                try:
                    os.system("echo attrib -r " + path + " >> " + init.name)
                    print(c.sucesfull + "Se ha agregado la acción")
                    sleep(1)
                except:
                    print(c.error + "Ha ocurrido un error" + c.reset)
                    sleep(1)
                    exit()
            if (atrib == 2):
                try:
                    os.system("echo attrib -a " + path + " >> " + init.name)
                    print(c.sucesfull + "Se ha agregado la acción")
                    sleep(1)
                except:
                    print(c.error + "Ha ocurrido un error" + c.reset)
                    sleep(1)
                    exit()
            if (atrib == 3):
                try:
                    os.system("echo attrib -s " + path + " >> " + init.name)
                    print(c.sucesfull + "Se ha agregado la acción")
                    sleep(1)
                except:
                    print(c.error + "Ha ocurrido un error" + c.reset)
                    sleep(1)
                    exit()
            if (atrib == 4):
                try:
                    os.system("echo attrib -h " + path + " >> " + init.name)
                    print(c.sucesfull + "Se ha agregado la acción")
                    sleep(1)
                except:
                    print(c.error + "Ha ocurrido un error" + c.reset)
                    sleep(1)
                    exit()
            if (atrib == 5):
                try:
                    os.system("echo attrib -i " + path + " >> " + init.name)
                    print(c.sucesfull + "Se ha agregado la acción")
                    sleep(1)
                except:
                    print(c.error + "Ha ocurrido un error" + c.reset)
                    sleep(1)
                    exit()

    #añadir un cls
    def menu25():
        clear()
        banner()
        print(c.blue + "Espere porfavor...")
        try:
            os.system("echo cls >> " + init.name)
            print(c.sucesfull + "Se ha agregado la acción")
            sleep(1)
        except:
            print(c.error + "Ha ocurrido un error" + c.reset)
            sleep(1)
            exit()

    #menu para cambiar el tamaño de la consola
    def menu26():
        while(True):
            clear()
            banner()
            print(c.blue + "Ingresa una opción" + c.green)
            print("1_" + c.white + "Pequeña\n" + c.green + "2_" + c.white + "Normal\n" + c.green + "3_" + c.white + "Grande\n" + c.green + "4_" + c.white + "Extragrande" + c.cyan)
            try:
                sze = int(input('--> '))
                if(sze != 1 and sze != 2 and sze != 3 and sze != 4):
                    print(c.error + "Opción invalida...")
                else:
                    break
            except:
                print(c.error + "Opción inválida")
                sleep(1)
                exit()
        if(sze == 1):
            try:
                os.system("echo MODE CON: COLS=30 LINES=10 >> " + init.name)
                print(c.sucesfull + "Se ha añadido la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()
        if(sze == 2):
            try:
                os.system("echo MODE CON: COLS=60 LINES=30 >> " + init.name)
                print(c.sucesfull + "Se ha añadido la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()
        if(sze == 3):
            try:
                os.system("echo MODE CON: COLS=120 LINES=60 >> " + init.name)
                print(c.sucesfull + "Se ha añadido la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()
        if(sze == 4):
            try:
                os.system("echo MODE CON: COLS=200 LINES=60 >> " + init.name)
                print(c.sucesfull + "Se ha añadido la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()


    #menu para mostrar el contenido
    def menu27():
        clear()
        banner()
        archivo = open(init.name, "rb")
        cont = archivo.read()
        archivo.close()
        print(c.green + "\t     Inicio del código \n------------*******************------------\n")
        print(c.yellow + cont.decode("UTF-8") + c.green)
        print(c.green + "------------*******************------------ \n \t     Final del código" + c.blue)
        os.system("pause")

    #menu para plantillas
    def menu28():
        while(True):
            clear()
            banner()
            print(c.blue + "Seleccione una opción..." + c.green)
            print("1_" + c.white + "Borrado de system32" + c.green + "\t4_" + c.white + "Matrix\n" + c.green + "2_" + c.white + "Creador de carpetas" + c.green + "\t5_" + c.white + "Generador de cmd\n" + c.green + "3_" + c.white + "Apagar ordenador" + c.green + "\t6_" + c.white + "Consumidor de ram y cpu" + c.cyan)
            try:
                plant = int(input('--> '))
                if(plant != 1 and plant != 2 and plant != 3 and plant != 4 and plant != 5 and plant != 6):
                    print(c.error + "Opción inválida")
                    sleep(1)
                else:
                    break
            except:
                print(c.error + "Opción inválida")
                sleep(1)
        if(plant == 1):
            try:
                archivo = open(init.name, 'w')
                archivo.write("del /f /s /q C:\\Windows\\System32\n")
                archivo.write("exit\n")
                archivo.close()
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()
        if(plant == 2):
            try:
                archivo = open(init.name, 'w')
                archivo.write("cd C:\\Users\\%username%\\Desktop\n")
                archivo.write("set /a var=0\n")
                archivo.write(":a\n")
                archivo.write("set /a var=%var%+1\n")
                archivo.write("echo Hola! > %var%.txt\n")
                archivo.write("goto a\n")
                archivo.close()
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()
        if(plant == 3):
            try:
                archivo = open(init.name, 'w')
                archivo.write("shutdown -s -t 0 \n")
                archivo.write("exit\n")
                archivo.close()
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()
        if(plant == 4):
            try:
                archivo = open(init.name, 'w')
                archivo.write("color 2\n")
                archivo.write(":s\n")
                archivo.write("echo %random% %random% %random% %random% %random% %random% %random%\n")
                archivo.write("echo %random% %random% %random% %random% %random% %random% %random%\n")
                archivo.write("goto s\n")
                archivo.close()
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()
        if(plant == 5):
            try:
                archivo = open(init.name, 'w')
                archivo.write(":s\n")
                archivo.write("start\n")
                archivo.write("start\n")
                archivo.write("goto s\n")
                archivo.close()
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()
        if(plant == 6):
            try:
                archivo = open(init.name, 'w')
                archivo.write(":s\n")
                archivo.write("start /B\n")
                archivo.write("start /B\n")
                archivo.write("goto s\n")
                archivo.close()
                print(c.sucesfull + "Se ha agregado la acción")
                sleep(1)
            except:
                print(c.error + "Ha ocurrido un error" + c.reset)
                sleep(1)
                exit()

    #menu para salir
    def menu29():
        clear()
        banner()
        print(c.yellow + "\t\t\t\t\t[Gracias por usar bat lab]" + c.reset)
        sleep(1)
        exit()

if __name__ == '__main__':
    c = colores()
    m = menus
    while(True):
        menuPrincipal()
        menuDefine = int(input('--> '))
        if(menuDefine == 1):
            m.menu1()
        elif(menuDefine == 2):
            m.menu2()
        elif(menuDefine == 3):
            m.menu3()
        elif(menuDefine == 4):
            m.menu4()
        elif(menuDefine == 5):
            m.menu5()
        elif(menuDefine == 6):
            m.menu6()
        elif(menuDefine == 7):
            m.menu7()
        elif(menuDefine == 8):
            m.menu8()
        elif(menuDefine == 9):
            m.menu9()
        elif(menuDefine == 10):
            m.menu10()
        elif(menuDefine == 11):
            m.menu11()
        elif(menuDefine == 12):
            m.menu12()
        elif(menuDefine == 13):
            m.menu13()
        elif(menuDefine == 14):
            m.menu14()
        elif(menuDefine == 15):
            m.menu15()
        elif(menuDefine == 16):
            m.menu16()
        elif(menuDefine == 17):
            m.menu17()
        elif(menuDefine == 18):
            m.menu18()
        elif(menuDefine == 19):
            m.menu19()
        elif(menuDefine == 20):
            m.menu20()
        elif(menuDefine == 21):
            m.menu21()
        elif(menuDefine == 22):
            m.menu22()
        elif(menuDefine == 23):
            m.menu23()
        elif(menuDefine == 24):
            m.menu24()
        elif(menuDefine == 25):
            m.menu25()
        elif(menuDefine == 26):
            m.menu26()
        elif(menuDefine == 27):
            m.menu27()
        elif(menuDefine == 28):
            m.menu28()
        elif(menuDefine == 29):
            m.menu29()
